// <auto-generated />
using HotelListing.Core.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelListing.Core.DataAccess.Migrations
{
    [DbContext(typeof(CoreDatabaseContext))]
    [Migration("20210524114908_CreateDatabaseAndSeedData")]
    partial class CreateDatabaseAndSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("core")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelListing.Core.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "United Stated",
                            ShortName = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland",
                            ShortName = "PL"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Norway",
                            ShortName = "NOR"
                        });
                });

            modelBuilder.Entity("HotelListing.Core.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Busy Street 3",
                            CountryId = 1,
                            Name = "Arcadia",
                            Rating = "4.6"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Tetris 28",
                            CountryId = 1,
                            Name = "Pearl",
                            Rating = "3.2"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Marshal's 42",
                            CountryId = 2,
                            Name = "Portos",
                            Rating = "4.1"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Marble Street 1",
                            CountryId = 3,
                            Name = "SolidOne",
                            Rating = "5"
                        });
                });

            modelBuilder.Entity("HotelListing.Core.Models.Hotel", b =>
                {
                    b.HasOne("HotelListing.Core.Models.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListing.Core.Models.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
